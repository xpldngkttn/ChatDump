STRUCT(VSInput)
{
    DATA(float3, Position, POSITION);
    DATA(float3, Normal, NORMAL);
};

STRUCT(VSOutput)
{
    DATA(float4, Position, SV_Position);
    DATA(float4, Color, COLOR);
};

ROOT_SIGNATURE(DefaultRootSignature)
VSOutput VS_MAIN(VSInput In)
{
    INIT_MAIN;
    VSOutput Out;
    float3 lightDir = normalize(float3(0.0f, -1.0f, 0.0f));
    float3 normal = normalize(In.Normal);
    float diff = max(dot(normal, -lightDir), 0.1f);
    float3 color = float3(1.0f, 0.0f, 0.0f) * diff;
    Out.Color = float4(color, 1.0f);
    Out.Position = mul(gUniformBlock.mvp, float4(In.Position, 1.0f));
    RETURN(Out);
}
